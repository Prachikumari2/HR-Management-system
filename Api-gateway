api-gateway
// api-gateway.ts
import express from 'express';
import { createProxyMiddleware } from 'http-proxy-middleware';
import jwt from 'jsonwebtoken';

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware for JWT authentication
const authenticateJWT = (req: express.Request, res: express.Response, next: express.NextFunction) => {
  const authHeader = req.headers.authorization;
  if (authHeader) {
    const token = authHeader.split(' ')[1];
    jwt.verify(token, process.env.JWT_SECRET || 'your_jwt_secret', (err, user) => {
      if (err) {
        return res.sendStatus(403);
      }
      req.user = user;
      next();
    });
  } else {
    res.sendStatus(401);
  }
};

// Proxy middleware setup
const employeeServiceProxy = createProxyMiddleware({
  target: 'http://employee-service:4001',
  changeOrigin: true,
});

const timeAttendanceServiceProxy = createProxyMiddleware({
  target: 'http://time-attendance-service:4002',
  changeOrigin: true,
});

// Routes
app.use('/api/employees', authenticateJWT, employeeServiceProxy);
app.use('/api/time-attendance', authenticateJWT, timeAttendanceServiceProxy);

app.listen(PORT, () => {
  console.log(API Gateway running on port ${PORT});
});
